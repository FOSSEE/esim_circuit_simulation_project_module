<?php
// $Id$
require_once('general_deletion.inc');
require_once('email.inc');
/**
 * Implementation of hook_menu().
 */
function circuit_simulation_menu()
{
	$items = array();
	/* PROPOSAL */
	$items['circuit-simulation-project/proposal'] = array(
		'title' => 'Circuit Simulation Proposal Form',
		'description' => 'Circuit Simulation Proposal Form',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'circuit_simulation_proposal_form'
		),
		'access arguments' => array(
			'esim circuit simulation create proposal'
		),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'proposal.inc'
	);
	$items['circuit-simulation-project/manage-proposal'] = array(
		'title' => 'Manage Circuit Simulation Proposals',
		'description' => 'Manage Circuit Simulation Proposals',
		'page callback' => 'circuit_simulation_proposal_pending',
		'access callback' => 'user_access',
		'access arguments' => array(
			'esim circuit simulation manage proposal'
		),
		'file' => 'manage_proposal.inc'
	);
	$items['circuit-simulation-project/manage-proposal/pending'] = array(
		'title' => 'Pending Proposals',
		'description' => 'Pending esim circuit simulation Proposals Queue',
		'page callback' => 'circuit_simulation_proposal_pending',
		'access callback' => 'user_access',
		'access arguments' => array(
			'esim circuit simulation manage proposal'
		),
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'weight' => 1,
		'file' => 'manage_proposal.inc'
	);
	$items['circuit-simulation-project/manage-proposal/all'] = array(
		'title' => 'All Proposals',
		'description' => 'All Proposals',
		'page callback' => 'circuit_simulation_proposal_all',
		'access callback' => 'user_access',
		'access arguments' => array(
			'esim circuit simulation manage proposal'
		),
		'type' => MENU_LOCAL_TASK,
		'weight' => 2,
		'file' => 'manage_proposal.inc'
	);
	$items['circuit-simulation-project/manage-proposal/approved_proposals'] = array(
		'title' => 'Approved Proposals',
		'description' => 'Approved Proposals',
		'page callback' => 'circuit_simulation_approved_tab',
		'access callback' => 'user_access',
		'access arguments' => array(
			'esim circuit simulation manage proposal'
		),
		'type' => MENU_LOCAL_TASK,
		'weight' => 3,
		'file' => 'proposals_review_tab.inc'
	);
	$items['circuit-simulation-project/manage-proposal/uploaded_proposals'] = array(
		'title' => 'Uploaded Proposals',
		'description' => 'Uploaded Proposals',
		'page callback' => 'circuit_simulation_uploaded_tab',
		'access callback' => 'user_access',
		'access arguments' => array(
			'esim circuit simulation manage proposal'
		),
		'type' => MENU_LOCAL_TASK,
		'weight' => 4,
		'file' => 'proposals_review_tab.inc'
	);
	$items['circuit-simulation-project/manage-proposal/completed_proposals'] = array(
		'title' => 'Completed Proposals',
		'description' => 'Completed Proposals',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('circuit_simulation_completed_tab_form'),
		'access callback' => 'user_access',
		'access arguments' => array(
			'esim circuit simulation manage proposal'
		),
		'type' => MENU_LOCAL_TASK,
		'weight' => 5,
		'file' => 'proposals_review_tab.inc'
	);
	$items['circuit-simulation-project/manage-proposal/approve'] = array(
		'title' => 'Approve Proposal',
		'description' => 'Approve Proposal',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'circuit_simulation_proposal_approval_form'
		),
		'access arguments' => array(
			'esim circuit simulation manage proposal'
		),
		'type' => MENU_CALLBACK,
		'file' => 'manage_proposal.inc'
	);
	$items['circuit-simulation-project/manage-proposal/solution-proposal-approve'] = array(
		'title' => 'Approve Solution Proposal',
		'description' => 'Approve Solution Proposal',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'circuit_simulation_solution_proposal_approval_form'
		),
		'access arguments' => array(
			'esim circuit simulation manage proposal'
		),
		'type' => MENU_CALLBACK,
		'file' => 'manage_solution_proposal.inc'
	);
	$items['circuit-simulation-project/manage-proposal/edit'] = array(
		'title' => 'Edit Proposal',
		'description' => 'Edit Proposal',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'circuit_simulation_proposal_edit_form'
		),
		'access arguments' => array(
			'esim circuit simulation manage proposal'
		),
		'type' => MENU_CALLBACK,
		'file' => 'manage_proposal.inc'
	);
	$items['circuit-simulation-project/manage-proposal/status'] = array(
		'title' => 'Proposal Status',
		'description' => 'Proposal Status',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'circuit_simulation_proposal_status_form'
		),
		'access arguments' => array(
			'esim circuit simulation approve proposal'
		),
		'type' => MENU_CALLBACK,
		'file' => 'manage_proposal.inc'
	);
	$items['circuit-simulation-project/show-proposal'] = array(
		'title' => 'esim circuit simulation Solution Proposal',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'circuit_simulation_solution_proposal_form'
		),
		'access arguments' => array(
			'esim circuit simulation propose solution'
		),
		'type' => MENU_CALLBACK,
		'file' => 'solution_proposal.inc'
	);
	/* CODE REVIEW */
	$items['circuit-simulation-project/code-approval'] = array(
		'title' => 'LM Manage Code Approval',
		'description' => 'Manage Code Approval',
		'page callback' => 'circuit_simulation_code_approval',
		'access arguments' => array(
			'esim circuit simulation approve code'
		),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'code_approval.inc'
	);
	$items['circuit-simulation-project/abstract-approval/approve'] = array(
		'title' => 'Code Approval',
		'description' => 'Code Approval',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'circuit_simulation_abstract_approval_form'
		),
		'access arguments' => array(
			'esim circuit simulation approve code'
		),
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'weight' => 1,
		'file' => 'code_approval.inc'
	);
	$items['circuit-simulation-project/abstract-approval/bulk'] = array(
		'title' => 'Bulk Manage',
		'description' => 'Bulk Mangage',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'circuit_simulation_abstract_bulk_approval_form'
		),
		'access arguments' => array(
			'esim circuit simulation bulk manage abstract'
		),
		'type' => MENU_LOCAL_TASK,
		'weight' => 2,
		'file' => 'abstract_bulk_approval.inc'
	);
	$items['circuit-simulation-project/code-approval/bulk'] = array(
		'title' => 'Bulk Manage',
		'description' => 'Bulk Mangage',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'circuit_simulation_bulk_approval_form'
		),
		'access arguments' => array(
			'esim circuit simulation bulk manage abstract'
		),
		'type' => MENU_LOCAL_TASK,
		'weight' => 2,
		'file' => 'bulk_approval.inc'
	);
	/*$items['circuit_simulation/code_approval/dependency'] = array(
	'title' => 'Dependency',
	'description' => 'Dependency Mangage',
	'page callback' => 'drupal_get_form',
	'page arguments' => array('circuit_simulation_dependency_approval_form'),
	'access arguments' => array('esim circuit simulation bulk manage abstract'),
	'type' => MENU_LOCAL_TASK,
	'weight' => 3,
	'file' => 'dependency_approval.inc',
	);*/
	$items['circuit-simulation-project/code-approval/upload'] = array(
		'title' => 'Upload Code',
		'description' => 'Admin Upload',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'circuit_simulation_bulk_upload_code_form'
		),
		'access arguments' => array(
			'esim circuit simulation bulk manage abstract'
		),
		'type' => MENU_CALLBACK,
		'weight' => 4,
		'file' => 'bulk_upload_code.inc'
	);
	$items['circuit-simulation-project/code-approval/notes'] = array(
		'title' => 'Notes for Reviewers',
		'description' => 'Notes for Reviewers',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'circuit_simulation_lab_notes_form'
		),
		'access arguments' => array(
			'esim circuit simulation bulk manage abstract'
		),
		'type' => MENU_CALLBACK,
		'weight' => 4,
		'file' => 'notes.inc'
	);
	/* CODE UPLOAD */
	/* CODE UPLOAD */
	$items['circuit-simulation-project/abstract-code'] = array(
		'title' => 'Abstract and Project Files Upload',
		'description' => 'Abstract Submission',
		'page callback' => 'circuit_simulation_abstract',
		'access callback' => 'user_access',
		'access arguments' => array(
			'esim circuit simulation upload abstract'
		),
		'file' => 'upload_code.inc'
	);
	$items['circuit-simulation-project/abstract-code/circuit simulation-project-list'] = array(
		'title' => 'Circuit Simulation',
		'description' => 'List Experiments',
		'page callback' => 'circuit_simulation_abstract',
		'access arguments' => array(
			'esim circuit simulation upload abstract'
		),
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'file' => 'upload_code.inc',
		'weight' => 1
	);
	$items['circuit-simulation-project/abstract-code/upload'] = array(
		'title' => 'Abstract and Project Upload',
		'description' => 'Project Upload',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'circuit_simulation_upload_abstract_code_form'
		),
		'access arguments' => array(
			'esim circuit simulation upload abstract'
		),
		'type' => MENU_LOCAL_TASK,
		'file' => 'upload_code.inc',
		'weight' => 2
	);
	$items['circuit-simulation-project/abstract-code/delete'] = array(
		'title' => 'Delete Solution',
		'description' => 'Delete Solution',
		'page callback' => 'circuit_simulation_upload_code_delete',
		'access arguments' => array(
			'esim circuit simulation upload code'
		),
		'type' => MENU_CALLBACK,
		'file' => 'upload_code_delete.inc'
	);
	/* CODE DOWNLOADS */
	$items['circuit-simulation-project/download/file'] = array(
		'title' => 'Code Download',
		'description' => 'Code Download',
		'page callback' => 'circuit_simulation_download_solution_file',
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'type' => MENU_CALLBACK,
		'file' => 'download.inc'
	);
	$items['circuit-simulation-project/download/solution'] = array(
		'title' => 'Code Download',
		'description' => 'Code Download',
		'page callback' => 'circuit_simulation_download_solution',
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'type' => MENU_CALLBACK,
		'file' => 'download.inc'
	);
	$items['circuit-simulation-project/download/experiment'] = array(
		'title' => 'Code Download',
		'description' => 'Code Download',
		'page callback' => 'circuit_simulation_download_experiment',
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'type' => MENU_CALLBACK,
		'file' => 'download.inc'
	);
	$items['circuit-simulation-project/download/lab'] = array(
		'title' => 'Code Download',
		'description' => 'Code Download',
		'page callback' => 'circuit_simulation_download_lab',
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'type' => MENU_CALLBACK,
		'file' => 'download.inc'
	);
	$items['circuit-simulation-project/full-download/experiment'] = array(
		'title' => 'Code Download',
		'description' => 'Code Download',
		'page callback' => 'circuit_simulation_download_completed_project',
		'access arguments' => array(
			'esim circuit simulation approve code'
		),
		'type' => MENU_CALLBACK,
		'file' => 'full_download.inc'
	);
	$items['circuit-simulation-project/full-download/project'] = array(
		'title' => 'Code Download',
		'description' => 'Code Download',
		'page callback' => 'circuit_simulation_download_full_project',
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'type' => MENU_CALLBACK,
		'file' => 'full_download.inc'
	);
	$items['circuit-simulation-project/download-proposals'] = array(
		'title' => 'Download Proposals',
		'description' => 'Download Proposals',
		'page callback' => 'circuit_simulation_download_proposals',
		'access arguments' => array(
			'esim circuit simulation download proposals'
		),
		'type' => MENU_CALLBACK,
		'file' => 'download.inc'
	);
	$items['circuit-simulation-project/download-completed-proposals'] = array(
		'title' => 'Download Completed Proposals',
		'description' => 'Download Completed Proposals',
		'page callback' => 'esim_circuit_simulation_download_completed_proposals',
		'access arguments' => array(
			'esim circuit simulation download proposals'
		),
		'file' => 'download_proposals.inc'
	);
	/* COMPLETED esim circuit simulationS */
	$items['circuit-simulation-project/completed-circuits'] = array(
		'title' => 'Completed Circuit Simulations',
		'page callback' => 'circuit_simulation_completed_proposals_all',
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'file' => 'circuit_simulation_details.inc',
	);
	$items['circuit-simulation-project/completed-circuits/simulations'] = array(
		'title' => 'Completed Circuit Simulations',
		'page callback' => 'circuit_simulation_completed_proposals_all',
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'file' => 'circuit_simulation_details.inc',
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'weight' => 0
	);
	$items['circuit-simulation-project/completed-circuits/pspice-to-kicad'] = array(
		'title' => 'Completed PSPICE to KICAD Circuits',
		'page callback' => 'circuit_simulation_completed_pspice_to_kicad',
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'file' => 'circuit_simulation_details.inc',
		'type' => MENU_LOCAL_TASK,
		'weight' => 1
	);



	/* COMPLETED circuit simulationS IDEA 1*/
	$items['circuit_simulation'] = array(
		'#type' => 'vertical_tabs',
	);
	$items['completed-circuits-idea1'] = array(
		'title' => 'Completed Circuit Simulations',
		'page callback' => 'completed_circuit_proposals_all_idea1',
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'file' => 'completed_circuits.inc',
		'#type' => 'circuit_simulation',
		'#collapsible' => TRUE,
      	// Open by default.
      	'#collapsed' => FALSE,
	);
	$items['completed-circuits-idea1/simulations'] = array(
		'title' => 'Completed Circuit Simulations',
		'page callback' => 'circuit_simulation_completed_proposals_all_idea1',
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'file' => 'completed_circuits.inc',
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'#type' => 'circuit_simulation',
		'#open' => TRUE,
		'weight' => 0
	);
	$items['completed-circuits-idea1/pspice-to-kicad'] = array(
		'title' => 'Completed PSPICE to KICAD Circuits',
		'page callback' => 'completed_circuit_pspice_to_kicad_idea1',
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'file' => 'completed_circuits.inc',
		'type' => MENU_LOCAL_TASK,
		'#type' => 'circuit_simulation',
		'#open' => TRUE,
		'weight' => 1 
	);
	$items['completed-circuits-idea1/marathon_2021'] = array(
		'title' => 'Completed Marathon 2021 Circuits',
		'description' => 'Completed Marathon 2021 Circuits',
		'page callback' => 'completed_circuits_hackathon_submissions_idea1',
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'file' => 'completed_circuits.inc',
		'type' => MENU_LOCAL_TASK,
		'#type' => 'circuit_simulation',
		'#open' => TRUE,
		'weight' => 2
	);
	$items['completed-circuits-idea1/marathon_2022'] = array(
		'title' => 'Completed Marathon 2022 Circuits',
		'description' => 'View Completed Marathon 2022 Circuits',
		'page callback' => 'completed_circuits_mscd_display_final_submissions_idea1',
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'file' => 'completed_circuits.inc',
		'type' => MENU_LOCAL_TASK,
		'#type' => 'circuit_simulation',
		'#open' => TRUE,
		'weight' => 3
	);



	/* COMPLETED circuit simulationS IDEA 2*/
	$items['completed-circuits'] = array(
		'title' => 'Completed Circuit Simulations',
        "page callback" => "drupal_get_form",
        "page arguments" => array(
            "completed_circuit_form"
        ),
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'#type' => 'item',
		'#prefix' => '<div id="circuitproposalsall"',
		'#suffix' => '</div>'
	);
	$items['completed-circuits/pspice-to-kicad'] = array(
		'title' => 'Completed PSPICE to KICAD Circuits',
        "page callback" => "drupal_get_form",
        "page arguments" => array(
            "completed_circuit_form"
        ),
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'#type' => 'item',
		'#prefix' => ' <div id="pspicetokicad"',
		'#suffix' => '</div>'
	);
	$items['completed-circuits/marathon_2021'] = array(
		'title' => 'Completed Marathon 2021 Circuits',
        "page callback" => "drupal_get_form",
        "page arguments" => array(
            "completed_circuit_form"
        ),
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'#type' => 'item',
		'#prefix' => '<div id="hackathonsubmissions"',
		'#suffix' => '</div>'
	);
	$items['completed-circuits/marathon_2022'] = array(
		'title' => 'Completed Marathon 2022 Circuits',
        "page callback" => "drupal_get_form",
        "page arguments" => array(
            "completed_circuit_form"
        ),
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'#type' => 'item',
		'#prefix' => '<div id="finalsubmissions"',
		'#suffix' => '</div>'
	);



	$items['circuit-simulation-project/completed-circuits/ltspice-to-kicad'] = array(
		'title' => 'Completed LTSpice to KICAD Circuits',
		'page callback' => 'circuit_simulation_completed_ltspice_to_kicad',
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'file' => 'circuit_simulation_details.inc',
		'type' => MENU_LOCAL_TASK,
		'weight' => 2
	);

	/* LABS IN PROGRESS */
	$items['circuit-simulation-project/circuit-simulation-progress'] = array(
		'title' => 'Circuit Simulations in Progress',
		'page callback' => 'circuit_simulation_progress_all',
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'file' => 'circuit_simulation_details.inc'
	);
	/* DOWNLOAD FOR EVERYONE */
	$items['circuit-simulation-project/esim-circuit-simulation-run'] = array(
		'title' => 'Download Codes',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'circuit_simulation_run_form'
		),
		'access arguments' => array(
			'esim circuit simulation download code'
		),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'run.inc'
	);
	$items['circuit-simulation-project/download/resource-file'] = array(
		'title' => 'Download user defined compound file',
		'description' => 'Download resource file',
		'page callback' => 'circuit_simulation_download_upload_file',
		'access arguments' => array(
			'download code'
		),
		'type' => MENU_CALLBACK,
		'file' => 'download.inc'
	);
	$items['circuit-simulation-project/download/project-file'] = array(
		'title' => 'Download Project file',
		'description' => 'Download project file',
		'page callback' => 'esim_circuit_simulation_project_files',
		'access arguments' => array(
			'download code'
		),
		'type' => MENU_CALLBACK,
		'file' => 'download.inc'
	);
	/* LATEX SCRIPT */
	$items['circuit-simulation-project/generate-lab'] = array(
		'title' => 'Generate Lab',
		'description' => 'Generate Lab From Latex Script',
		'page callback' => 'circuit_simulation_download_lab_pdf',
		'access arguments' => array(
			'esim circuit simulation generate lab'
		),
		'type' => MENU_CALLBACK,
		'file' => 'latex.inc'
	);
	$items['circuit-simulation-project/delete-lab'] = array(
		'title' => 'Delete Lab PDF',
		'description' => 'Delete Lab PDF',
		'page callback' => 'circuit_simulation_delete_lab_pdf',
		'access arguments' => array(
			'esim circuit simulation approve code'
		),
		'type' => MENU_CALLBACK,
		'file' => 'latex.inc'
	);
	/* ADMIN SETTINGS */
	$items['admin/settings/esim-circuit simulation'] = array(
		'title' => 'esim circuit simulation Settings',
		'description' => 'esim circuit simulation Settings',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'circuit_simulation_settings_form'
		),
		'access arguments' => array(
			'administer esim circuit simulation'
		),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'settings.inc'
	);
	/* AJAX REQUEST */
	$items["lab-bulk-manage-exp/ajax"] = array(
		"title" => "Ajax callbacks",
		"page callback" => "lab_bulk_manage_exp_ajax",
		"access arguments" => array(
			"esim circuit simulation bulk manage abstract"
		),
		"type" => MENU_CALLBACK,
		'file' => 'bulk_approval.inc'
	);
	$items['circuit-simulation-project/certificates'] = array(
		'title' => 'List of Circuit Simulation Certificates',
		'description' => 'List of circuit simulation Certificates',
		'page callback' => '_list_circuit_simulation_certificates',
		'access arguments' => array(
			'list circuit simulation certificates'
		),
		'file' => 'pdf/list_circuit_simulation_certificate.inc'
	);
	$items['circuit-simulation-project/certificates/generate-pdf'] = array(
		'title' => 'Download Certificate',
		'description' => 'Download Certificate',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'generate_pdf'
		),
		'type' => MENU_CALLBACK,
		'access arguments' => array(
			'generate pdf'
		),
		'file' => 'pdf/cert_new.inc'
	);
	$items['circuit-simulation-project/certificates-custom'] = array(
		'title' => 'List of Circuit Simulation Custom Certificates',
		'description' => 'List of circuit simulation Custom Certificates',
		'page callback' => '_list_circuit_simulation_custom_certificates',
		'access arguments' => array(
			'list circuit simulation custom certificates'
		),
		'file' => 'pdf/list_mentor_certificates.inc'
	);
	$items['circuit-simulation-project/certificates-custom/pdf'] = array(
		'title' => 'Download Certificate',
		'description' => 'Download Certificate',
		'page callback' => 'drupal_get_form',
		'page arguments' => array(
			'generate_pdf'
		),
		'type' => MENU_CALLBACK,
		'access arguments' => array(
			'generate pdf'
		),
		'file' => 'pdf/mentor_cert_pdf.inc'
	);
	$items['circuit-simulation-project/certificates/verify'] = array(
		"title" => "Certificate Verification",
		"page callback" => "verify_certificates",
'page arguments' => array(
			'verify_certificates'
		),
		"access arguments" => array(
			"verify certificates"
		),
		'type' => MENU_CALLBACK,
		'file' => 'pdf/verify_certificates.inc'
	);
	return $items;
}

function completed_circuit_form($form, &$form_state) {

	$form['circuit_table'] = array(
        '#type' => 'item',
        '#prefix' => '<div id="default_load" >',
        '#markup' => '<ul class="nav nav-pills nav-stacked">                       
                        <li class="active"><a data-toggle="tab" href="#circuitproposalsall">Completed Circuits</a></li>

                         <li><a data-toggle="tab" href="#pspicetokicad">Completed PSPICE to KICAD Circuits</a></li>

                          <li><a data-toggle="tab" href="#hackathonsubmissions">Completed Marathon 2021 Circuits</a></li>

                           <li><a data-toggle="tab" href="#finalsubmissions">Completed Marathon 2022 Circuits</a></li>
                      </ul>'
     );

	$form['tab_content'] = array(
        '#type' => 'item',
        '#markup' => '<div class="tab-content">

        <div id="circuitproposalsall" class="tab-pane fade in active">' . completed_circuit_proposals_all("") . '
        </div>
     
        <div id="pspicetokicad" class="tab-pane fade ">' . completed_circuit_pspice_to_kicad("") . '
        </div>   

        <div id="hackathonsubmissions" class="tab-pane fade ">' . completed_circuits_hackathon_submissions("") . '</div>
       
        <div id="finalsubmissions" class="tab-pane fade">' . completed_circuits_mscd_display_final_submissions("") . '</div>
        
 		</div>'
    );

	$form['lastdiv'] = array(
        '#type' => 'item',
        '#markup' => '',
        '#suffix' => '</div>'
    );
    return $form;
}


/**
 * Implementation of hook_perm().
 */
function circuit_simulation_permission()
{
	return array(
		'esim circuit simulation create proposal' => array(
			'title' => t('esim circuit simulation create proposal'),
			'restrict access' => TRUE
		),
		'esim circuit simulation manage proposal' => array(
			'title' => t('esim circuit simulation manage proposal'),
			'restrict access' => TRUE
		),
		'esim circuit simulation edit proposal' => array(
			'title' => t('esim circuit simulation edit proposal'),
			'restrict access' => TRUE
		),
		'esim circuit simulation approve proposal' => array(
			'title' => t('esim circuit simulation approve proposal'),
			'restrict access' => TRUE
		),
		'esim circuit simulation propose solution' => array(
			'title' => t('esim circuit simulation propose solution'),
			'restrict access' => TRUE
		),
		'esim circuit simulation approve abstract' => array(
			'title' => t('esim circuit simulation approve code'),
			'restrict access' => TRUE
		),
		'esim circuit simulation bulk manage abstract' => array(
			'title' => t('esim circuit simulation bulk manage abstract'),
			'restrict access' => TRUE
		),
		'esim circuit simulation bulk delete abstract' => array(
			'title' => t('esim circuit simulation bulk delete code'),
			'restrict access' => TRUE
		),
		'esim circuit simulation upload abstract' => array(
			'title' => t('esim circuit simulation upload code'),
			'restrict access' => TRUE
		),
		'esim circuit simulation download code' => array(
			'title' => t('esim circuit simulation download code'),
			'restrict access' => TRUE
		),
		'esim circuit simulation download proposals' => array(
			'title' => t('esim circuit simulation download proposals'),
			'restrict access' => TRUE
		),
		'administer esim circuit simulation' => array(
			'title' => t('administer esim circuit simulation'),
			'restrict access' => TRUE
		),
		'esim circuit simulation generate abstract' => array(
			'title' => t('esim circuit simulation generate abstract'),
			'restrict access' => TRUE
		),
		"list circuit simulation certificates" => array(
			"title" => t("list the certificates"),
			"description" => t("list the certificates"),
			'restrict access' => TRUE
		),
		"list circuit simulation custom certificates" => array(
			"title" => t("list the mentor certificates"),
			"description" => t("list the mentor certificates"),
			'restrict access' => TRUE
		),
		"verify certificates" => array(
			"title" => t("verify the certificates"),
			"description" => t("verify the certificates"),
			'restrict access' => TRUE
		)

	);
	// return array('esim circuit simulation create proposal', 'esim circuit simulation manage proposal', 'esim circuit simulation edit proposal', 'esim circuit simulation approve proposal', 'esim circuit simulation propose solution', 'esim circuit simulation approve code', 'esim circuit simulation bulk manage abstract', 'esim circuit simulation bulk delete code', 'esim circuit simulation upload code', 'esim circuit simulation download code', 'administer esim circuit simulation', 'esim circuit simulation generate lab');
}
/* AJAX CALLS */
/*function circuit_simulation_ajax()
{
	$query_type = arg(2);
	if ($query_type == 'chapter_title')
	{
		$chapter_number = arg(3);
		$preference_id = arg(4);
		//$chapter_q = db_query("SELECT * FROM {esim_circuit_simulation_chapter} WHERE number = %d AND preference_id = %d LIMIT 1", $chapter_number, $preference_id);
		$query = db_select('esim_circuit_simulation_chapter');
		$query->fields('esim_circuit_simulation_chapter');
		$query->condition('number', $chapter_number);
		$query->condition('preference_id', $preference_id);
		$query->range(0, 1);
		$chapter_q = $query->execute();
		if ($chapter_data = $chapter_q->fetchObject())
		{
			echo $chapter_data->name;
			return;
		} //$chapter_data = $chapter_q->fetchObject()
	} //$query_type == 'chapter_title'
	else if ($query_type == 'example_exists')
	{
		$chapter_number = arg(3);
		$preference_id = arg(4);
		$example_number = arg(5);
		$chapter_id = 0;
		$query = db_select('esim_circuit_simulation_chapter');
		$query->fields('esim_circuit_simulation_chapter');
		$query->condition('number', $chapter_number);
		$query->condition('preference_id', $preference_id);
		$query->range(0, 1);
		$chapter_q = $query->execute();
		if (!$chapter_data = $chapter_q->fetchObject())
		{
			echo '';
			return;
		} //!$chapter_data = $chapter_q->fetchObject()
		else
		{
			$chapter_id = $chapter_data->id;
		}
		$query = db_select('esim_circuit_simulation_example');
		$query->fields('esim_circuit_simulation_example');
		$query->condition('chapter_id', $chapter_id);
		$query->condition('number', $example_number);
		$query->range(0, 1);
		$example_q = $query->execute();
		if ($example_data = $example_q->fetchObject())
		{
			if ($example_data->approval_status == 1)
				echo 'Warning! Solution already approved. You cannot upload the same solution again.';
			else
				echo 'Warning! Solution already uploaded. Delete the solution and reupload it.';
			return;
		} //$example_data = $example_q->fetchObject()
	} //$query_type == 'example_exists'
	echo '';
}*/
/*************************** VALIDATION FUNCTIONS *****************************/
function circuit_simulation_check_valid_filename($file_name)
{
	if (!preg_match('/^[0-9a-zA-Z\.\_]+$/', $file_name))
		return FALSE;
	else if (substr_count($file_name, ".") > 1)
		return FALSE;
	else
		return TRUE;
}
function circuit_simulation_check_name($name = '')
{
	if (!preg_match('/^[0-9a-zA-Z\ ]+$/', $name))
		return FALSE;
	else
		return TRUE;
}
function circuit_simulation_check_code_number($number = '')
{
	if (!preg_match('/^[0-9]+$/', $number))
		return FALSE;
	else
		return TRUE;
}
function circuit_simulation_path()
{
	return $_SERVER['DOCUMENT_ROOT'] . base_path() . 'esim_uploads/circuit_simulation_uploads/';
}
function circuit_simulation_file_path($value='')
{
	return $_SERVER['DOCUMENT_ROOT'] . base_path() . 'esim_uploads/';
}
/************************* USER VERIFICATION FUNCTIONS ************************/
function circuit_simulation_get_proposal()
{
	global $user;
	$query = db_select('esim_circuit_simulation_proposal');
	$query->fields('esim_circuit_simulation_proposal');
	$query->condition('uid', $user->uid);
	$query->orderBy('id', 'DESC');
	$query->range(0, 1);
	$proposal_q = $query->execute();
	$proposal_data = $proposal_q->fetchObject();
	if (!$proposal_data)
	{
		drupal_set_message("You do not have any approved eSim Circuit Simulation proposal. Please propose the circuit simulation proposal", 'error');
		drupal_goto('');
	} //!$proposal_data
	switch ($proposal_data->approval_status)
	{
		case 0:
			drupal_set_message(t('Proposal is awaiting approval.'), 'status');
			return FALSE;
		case 1:
			return $proposal_data;
		case 2:
			drupal_set_message(t('Proposal has been dis-approved.'), 'error');
			return FALSE;
		case 3:
			drupal_set_message(t('Proposal has been marked as completed.'), 'status');
			return FALSE;
		default:
			drupal_set_message(t('Invalid proposal state. Please contact site administrator for further information.'), 'error');
			return FALSE;
	} //$proposal_data->approval_status
	return FALSE;
}
/*************************************************************************/
/***** Function To convert only first charater of string in uppercase ****/
/*************************************************************************/
function ucname($string)
{
	$string = ucwords(strtolower($string));
	foreach (array(
		'-',
		'\''
	) as $delimiter)
	{
		if (strpos($string, $delimiter) !== false)
		{
			$string = implode($delimiter, array_map('ucfirst', explode($delimiter, $string)));
		} //strpos($string, $delimiter) !== false
	} //array( '-', '\'' ) as $delimiter
	return $string;
}
function _df_sentence_case($string)
{
	$string = ucwords(strtolower($string));
	foreach (array(
		'-',
		'\''
	) as $delimiter)
	{
		if (strpos($string, $delimiter) !== false)
		{
			$string = implode($delimiter, array_map('ucfirst', explode($delimiter, $string)));
		} //strpos($string, $delimiter) !== false
	} //array( '-', '\'' ) as $delimiter
	return $string;
}
function _df_list_of_states()
{
	$states = array(
		0 => '-Select-'
	);
	$query = db_select('list_states_of_india');
	$query->fields('list_states_of_india');
	//$query->orderBy('', '');
	$states_list = $query->execute();
	while ($states_list_data = $states_list->fetchObject())
	{
		$states[$states_list_data->state] = $states_list_data->state;
	} //$states_list_data = $states_list->fetchObject()
	return $states;
}
function _df_list_of_cities()
{
	$city = array(
		0 => '-Select-'
	);
	$query = db_select('list_cities_of_india');
	$query->fields('list_cities_of_india');
	$query->orderBy('city', 'ASC');
	$city_list = $query->execute();
	while ($city_list_data = $city_list->fetchObject())
	{
		$city[$city_list_data->city] = $city_list_data->city;
	} //$city_list_data = $city_list->fetchObject()
	return $city;
}
function _df_list_of_pincodes()
{
	$pincode = array(
		0 => '-Select-'
	);
	$query = db_select('list_of_all_india_pincode');
	$query->fields('list_of_all_india_pincode');
	$query->orderBy('pincode', 'ASC');
	$pincode_list = $query->execute();
	while ($pincode_list_data = $pincode_list->fetchObject())
	{
		$pincode[$pincode_list_data->pincode] = $pincode_list_data->pincode;
	} //$pincode_list_data = $pincode_list->fetchObject()
	return $pincode;
}
function _df_list_of_departments()
{
	$department = array();
	$query = db_select('list_of_departments');
	$query->fields('list_of_departments');
	$query->orderBy('id', 'DESC');
	$department_list = $query->execute();
	while ($department_list_data = $department_list->fetchObject())
	{
		$department[$department_list_data->department] = $department_list_data->department;
	} //$department_list_data = $department_list->fetchObject()
	return $department;
}
function _df_dir_name($project, $proposar_name)
{
	$project_title = ucname($project);
	$proposar_name = ucname($proposar_name);
	$dir_name = $project_title . ' By ' . $proposar_name;
	$directory_name = str_replace("__", "_", str_replace(" ", "_", str_replace("/","_", trim($dir_name))));
	return $directory_name;
}
function circuit_simulation_document_path()
{
	return $_SERVER['DOCUMENT_ROOT'] . base_path() . 'esim_uploads/circuit_simulation_uploads/';
}
function DF_RenameDir($proposal_id, $dir_name)
{
	$proposal_id = $proposal_id;
	$dir_name = $dir_name;
	$query = db_query("SELECT directory_name,id FROM esim_circuit_simulation_proposal WHERE id = :proposal_id", array(
		':proposal_id' => $proposal_id
	));
	$result = $query->fetchObject();
	if ($result != NULL)
	{
		$files = scandir(circuit_simulation_path());
		$files_id_dir = circuit_simulation_path() . $result->id;
		//var_dump($files);die;
		$file_dir = circuit_simulation_path() . $result->directory_name;
		if (is_dir($file_dir))
		{
			$new_directory_name = rename(circuit_simulation_path() . $result->directory_name, circuit_simulation_path() . $dir_name);
			return $new_directory_name;
		} //is_dir($file_dir)
		else if (is_dir($files_id_dir))
		{
			$new_directory_name = rename(circuit_simulation_path() . $result->id, circuit_simulation_path() . $dir_name);
			return $new_directory_name;
		} //is_dir($files_id_dir)
		else
		{
			drupal_set_message('Directory not available for rename.');
			return;
		}
	} //$result != NULL
	else
	{
		drupal_set_message('Project directory name not present in databse');
		return;
	}
	return;
}
function CreateReadmeFileeSimCircuitSimulationProject($proposal_id)
{
	$result = db_query("
                        SELECT * from esim_circuit_simulation_proposal WHERE id = :proposal_id", array(
		":proposal_id" => $proposal_id
	));
	$proposal_data = $result->fetchObject();
	$root_path = circuit_simulation_path();
	$readme_file = fopen($root_path . $proposal_data->directory_name . "/README.txt", "w") or die("Unable to open file!");
	$txt = "";
	$txt .= "About the Circuit Simulation";
	$txt .= "\n" . "\n";
	$txt .= "Title Of The Circuit Simulation Project: " . $proposal_data->project_title . "\n";
	$txt .= "Proposar Name: " . $proposal_data->name_title . " " . $proposal_data->contributor_name . "\n";
	$txt .= "University: " . $proposal_data->university . "\n";
	$txt .= "\n" . "\n";
	$txt .= "eSim Circuit Simulation Project By FOSSEE, IIT Bombay" . "\n";
	fwrite($readme_file, $txt);
	fclose($readme_file);
	return $txt;
}
function rrmdir_project($prop_id)
{
	$proposal_id = $prop_id;
	$result = db_query("
					SELECT * from esim_circuit_simulation_proposal WHERE id = :proposal_id", array(
		":proposal_id" => $proposal_id
	));
	$proposal_data = $result->fetchObject();
	$root_path = circuit_simulation_document_path();
	$dir = $root_path . $proposal_data->directory_name;
	if ($proposal_data->id == $prop_id)
	{
		if (is_dir($dir))
		{
			$objects = scandir($dir);
			foreach ($objects as $object)
			{
				if ($object != "." && $object != "..")
				{
					if (filetype($dir . "/" . $object) == "dir")
					{
						rrmdir($dir . "/" . $object);
					} //filetype($dir . "/" . $object) == "dir"
					else
					{
						unlink($dir . "/" . $object);
					}
				} //$object != "." && $object != ".."
			} //$objects as $object
			reset($objects);
			rmdir($dir);
			$msg = drupal_set_message("Directory deleted successfully");
			return $msg;
		} //is_dir($dir)
		$msg = drupal_set_message("Directory not present");
		return $msg;
	} //$proposal_data->id == $prop_id
	else
	{
		$msg = drupal_set_message("Data not found");
		return $msg;
	}
}
function rrmdir($dir)
{
	if (is_dir($dir))
	{
		$objects = scandir($dir);
		foreach ($objects as $object)
		{
			if ($object != "." && $object != "..")
			{
				if (filetype($dir . "/" . $object) == "dir")
					rrmdir($dir . "/" . $object);
				else
					unlink($dir . "/" . $object);
			} //$object != "." && $object != ".."
		} //$objects as $object
		reset($objects);
		rmdir($dir);
	} //is_dir($dir)
}

function completed_circuit_proposals_all()
{
	$output = "";
	$query = db_select('esim_circuit_simulation_proposal');
	$query->fields('esim_circuit_simulation_proposal');
	$query->condition('approval_status', 3);
	$query->orderBy('actual_completion_date', 'DESC');
	$query->range(0, 10);
	//$query->condition('is_completed', 1);
	$result = $query->execute();
	$output .= "<h2 dir='ltr'><span style='color:#008000'><strong>Completed Circuit Simulations</strong></span></h2>";
	//var_dump($esim_project_abstract);die;
	if ($result->rowCount() == 0)
	{
		$output .= "Work has been completed for the following circuit simulation. We welcome your contributions." ."<hr>";

	} //$result->rowCount() == 0
	else
	{
		$output .= "Work has been completed for the following circuit simulation. We welcome your contributions." . "<hr>";
		$preference_rows = array();
		$i = 1;
		while ($row = $result->fetchObject())
		{
			$proposal_id = $row->id;
			$query1 = db_select('esim_circuit_simulation_submitted_abstracts_file');
			$query1->fields('esim_circuit_simulation_submitted_abstracts_file');
			$query1->condition('file_approval_status', 1);
			$query1->condition('proposal_id', $proposal_id);
			$esim_project_files = $query1->execute();
			$esim_project_abstract = $esim_project_files->fetchObject();
			$completion_date = date("Y", $row->actual_completion_date);
			$preference_rows[] = array(
				$i,
				l($row->project_title, "circuit-simulation-project/esim-circuit-simulation-run/" . $row->id),
				$row->contributor_name,
				$row->university,
				$completion_date
			);
			$i++;
		} //$row = $result->fetchObject()
		$preference_header = array(
			'No',
			'Circuit Simulation Project',
			'Contributor Name',
			'University / Institute',
			'Year of Completion'
		);
		$output .= theme('table', array(
			'header' => $preference_header,
			'rows' => $preference_rows
		));
	}
	$output .= " ".l("More Completed Circuits","/circuit-simulation-project/completed-circuits"). " " ."<h4>";
	return $output;
}


function completed_circuit_pspice_to_kicad()
{
	$output = "";
	$query = db_select('pspice_to_kicad_circuits');
	$query->fields('pspice_to_kicad_circuits');
	$query->range(0, 10);
	//$query->condition('is_completed', 1);
	$result = $query->execute();
	
	//var_dump($esim_project_abstract);die;
	if ($result->rowCount() == 0)
	{
    $output .= "<hr>";
		$output .= "<h4 dir='ltr'><span style='color:#008000'><strong>PSpice to KiCad Converter</strong></span></h4>

<p dir='ltr'><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>This feature converts a schematic file created using PSpice&reg; to KiCad format. The converted schematic file is compatible with KiCad for PCB layout. You can also </span><span style='background-color:#fcfcfc; color:#000000; font-family:times new roman; font-size:12pt'>create a netlist and simulate using Ngspice. The source code for this converter is available <span style='text-decoration: underline;'><a href='https://github.com/FOSSEE/eSim_PSpice_to_KiCad_Python_Parser' target='_blank'>here</a>.</span></p>

<p dir='ltr'><span style='color:#008000'><strong>How to convert?</strong></span></p>

<ol>
	<li dir='ltr'>
	<p dir='ltr'><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>Login to eSim website</span><a href='https://esim.fossee.in/' style='text-decoration:none;' target='_blank'><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'> </span><u>here</u></a><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>.</span></p>
	</li>
	<li dir='ltr'>
	<p dir='ltr'><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>Upload the PSpice Schematic files by clicking <a href='https://esim.fossee.in/pspice-to-kicad/add' style='text-decoration:none;' target='_blank'><u>here</u></a><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>. </span><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>&nbsp;&nbsp;&nbsp; </span></span></p>
	</li>
	<li dir='ltr'>
	<p dir='ltr'><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>The PSpice schematic should be in standard format. Refer <a href='https://static.fossee.in/esim/manuals/trafo3ph_Dyn11.sch' target='_blank'>here</a>, for a few PSpice schematic samples.</span></p>
	</li>
	<li dir='ltr'>
	<p dir='ltr'><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>Your files will be converted to the KiCad schematic format. Once the conversion is complete, you will be intimated through your registered email id.</span></p>
	</li>
	<li dir='ltr'>
	<p dir='ltr'><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>You can use the KiCad schematic further for Simulation and for PCB generation. Follow the instructions <a href='https://static.fossee.in/esim/manuals/Instructions_PSpice_to_KiCad.pdf' target='_blank'>here</a>.</span></p>
	</li>
	<li dir='ltr'>
	<p dir='ltr'><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'> Converted files after verification are made available for download in the table below.</p>
	</li>
	<li dir='ltr'>
	<p dir='ltr'><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>  We welcome your contributions to this page</p>
	</li>
</ol>" . "<hr>";

	} //$result->rowCount() == 0
	else
	{
    $output .= "<hr>";
		$output .= "<h4 dir='ltr'><span style='color:#008000'><strong>PSpice to KiCad Converter</strong></span></h4>

<p dir='ltr'><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>This feature converts a schematic file created using PSpice&reg; to KiCad format. The converted schematic file is compatible with KiCad for PCB layout. You can also </span><span style='background-color:#fcfcfc; color:#000000; font-family:times new roman; font-size:12pt'>create a netlist and simulate using Ngspice. The source code for this converter is available <span style='text-decoration: underline;'><a href='https://github.com/FOSSEE/eSim_PSpice_to_KiCad_Python_Parser' target='_blank'>here</a>.</span></p>

<p dir='ltr'><span style='color:#008000'><strong>How to convert?</strong></span></p>

<ol>
	<li dir='ltr'>
	<p dir='ltr'><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>Login to eSim website</span><a href='https://esim.fossee.in/' style='text-decoration:none;' target='_blank'><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'> </span><u>here</u></a><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>.</span></p>
	</li>
	<li dir='ltr'>
	<p dir='ltr'><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>Upload the PSpice Schematic files by clicking <a href='https://esim.fossee.in/pspice-to-kicad/add' style='text-decoration:none;' target='_blank'><u>here</u></a><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>. </span><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>&nbsp;&nbsp;&nbsp; </span></span></p>
	</li>
	<li dir='ltr'>
	<p dir='ltr'><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>The PSpice schematic should be in standard format. Refer <a href='https://static.fossee.in/esim/manuals/trafo3ph_Dyn11.sch' target='_blank'>here</a>, for a few PSpice schematic samples.</span></p>
	</li>
	<li dir='ltr'>
	<p dir='ltr'><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>Your files will be converted to the KiCad schematic format. Once the conversion is complete, you will be intimated through your registered email id.</span></p>
	</li>
	<li dir='ltr'>
	<p dir='ltr'><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>You can use the KiCad schematic further for Simulation and for PCB generation. Follow the instructions <a href='https://static.fossee.in/esim/manuals/Instructions_PSpice_to_KiCad.pdf' target='_blank'>here</a>.</span></p>
	</li>
	<li dir='ltr'>
	<p dir='ltr'><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'> Converted files after verification are made available for download in the table below.</p>
	</li>
	<li dir='ltr'>
	<p dir='ltr'><span style='background-color:transparent; color:#000000; font-family:times new roman; font-size:12pt'>  We welcome your contributions to this page</p>
	</li>
</ol>" . "<hr>";
		$preference_rows = array();
		$i = 1;
		while ($row = $result->fetchObject())
		{
			/*$proposal_id = $row->id;
			$query1 = db_select('esim_circuit_simulation_submitted_abstracts_file');
			$query1->fields('esim_circuit_simulation_submitted_abstracts_file');
			$query1->condition('file_approval_status', 1);
			$query1->condition('proposal_id', $proposal_id);
			$esim_project_files = $query1->execute();
			$esim_project_abstract = $esim_project_files->fetchObject();
			$completion_date = date("Y", $row->actual_completion_date);*/
			$preference_rows[] = array(
				$i,
				l($row->name_of_circuit, 'https://static.fossee.in/esim/converters/pspicetokicad_PAGE_all/' . $row->filename . '.tar.gz')
				//$row->university,
				//$completion_date
			);
			$i++;
		} //$row = $result->fetchObject()
		$preference_header = array(
			'No',
			'Name of the Circuit',
			//'Download'
			//'Contributor Name',
			//'University / Institute',
			//'Year of Completion'
		);
		$output .= theme('table', array(
			'header' => $preference_header,
			'rows' => $preference_rows
		));
	}
	$output .= " ".l("More Completed pspice_to_kicad Circuits","/circuit-simulation-project/completed-circuits/pspice-to-kicad"). " " ."<h4>";
	return $output;
}


function completed_circuits_hackathon_submissions()
{
    $output = "";
    $query = db_select('hackathon_completed_circuits');
    $query->fields('hackathon_completed_circuits'); 
	$query->range(0, 10);
    $result = $query->execute();
    //var_dump($result->rowCount());die;
    $i = 1;
    $output .= "<hr>";
    $output .= "<h2 dir='ltr'><span style='color:#008000'><strong>Marathon 2021</strong></span></h2>";
    $output .= "FOSSEE Project in collaboration with VLSI System Design (VSD) Corp. Pvt. Ltd and the Ministry of Education, Govt. of India conducted a 2-weeks high intensity eSim Circuit Design and Simulation Marathon using Skywater 130nm technology, a fully open source process design kit. Close to 3000+ students from all over India participated in this Marathon and close to 200+ students completed this marathon with brilliant circuit design ideas. The following participants have successfully completed designing the circuits. More details about this event can be found here: <a href='https://hackathon.fossee.in/esim' target='_blank'>https://hackathon.fossee.in/esim</a>.<hr>";
    $preference_rows = array();
    while($row_completed_circuits = $result->fetchObject())
    {        
        $query_pro = db_select('hackathon_literature_survey');
        $query_pro->fields('hackathon_literature_survey');
        $query_pro->condition('id', $row_completed_circuits->literature_survey_id); 
		$query->range(0, 10);
        $result_pro = $query_pro->execute();
        while ($row = $result_pro->fetchObject())
        {
            //$approval_date = date("Y", $row->approval_date);
            $preference_rows[] = array(
                $i,
                l($row->circuit_name, 'hackathon-submission/download/completed-circuit/' . $row_completed_circuits->literature_survey_id),
                wordwrap($row->participant_name, 10, "\n", false),
                $row->institute,
                //$approval_date
            );
            
        } //$row = $result->fetchObject()
        $i++;
    }
    $preference_header = array(
            'No',
            'Circuit Name',
            'Participant Name',
            'Institute',
        );
        $output .= theme('table', array(
            'header' => $preference_header,
            'rows' => $preference_rows
        ));
    $output .= " ".l("More Completed Marathon 2021 Circuits","/hackathon/completed-circuits"). " " ."<h4>";
    return $output;
}

function completed_circuits_mscd_display_final_submissions()
{
    $my_submission_rows = array();
    $query = db_select('mixed_signal_marathon_final_submission');
    $query->fields('mixed_signal_marathon_final_submission');
    $query->orderBy('id', 'DESC');
	$query->range(0, 10);
    $my_submissions_q = $query->execute();
    $i = 1;
    $output .= "<hr>";
    $output .= "<h2 dir='ltr'><span style='color:#008000'><strong>Marathon 2022</strong></span></h2>";
    $output .= "Work has been completed for the following esim Marathon 2022." ."<hr>";
    while ($my_submissions_data = $my_submissions_q->fetchObject())
    {
        $query = db_select('mixed_signal_marathon_literature_survey');
        $query->fields('mixed_signal_marathon_literature_survey');
        $query->condition('id',$my_submissions_data->literature_survey_id);
        $query->orderBy('id', 'DESC');
        $final_submissions_q = $query->execute();
        $final_submission_data = $final_submissions_q->fetchObject();
        $action =  l('View', 'mixed-signal-design-marathon/view/final-submission/' . $final_submission_data->id);  
        $my_submission_rows[$my_submissions_data->id] = array(
        	$i,
            date('d-m-Y', $my_submissions_data->creation_date),
            l($final_submission_data->participant_name, 'user/' . $final_submission_data->uid),
            $final_submission_data->circuit_name,
            $action
        );
        $i++;
    } //$pending_data = $pending_q->fetchObject()
    /* check if there are any pending submissions */
    if (!$my_submission_rows)
    {
        drupal_set_message(t('There are no active submissions'), 'status');
        return '';
    } //!$pending_rows
    $my_submission_header = array(
    	'S.No',
        'Date of Submission',
        'Name',
        'Circuit Name',
        'Final Submission'
    );
    //$output = theme_table($pending_header, $pending_rows);
    $output .= theme('table', array(
        'header' => $my_submission_header,
        'rows' => $my_submission_rows
    ));
    $output .= " ".l("More Completed Marathon 2022 Circuits","/mixed-signal-design-marathon/all-submissions"). " " ."<h4>";
    return $output;
}